<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Fuzzing test on Windows</title>
      <link href="/2024/07/29/fuzz/fuzzying/"/>
      <url>/2024/07/29/fuzz/fuzzying/</url>
      
        <content type="html"><![CDATA[<h2 id="What-is-fuzz-testing"><a href="#What-is-fuzz-testing" class="headerlink" title="What is fuzz testing"></a>What is fuzz testing</h2><p>Fuzz testing or fuzzing is an automated software testing method that injects invalid, malformed, unexpected or random data as an input to a system to reveal software defects and vulnerabilities.</p><h2 id="Why-fuzz-testing"><a href="#Why-fuzz-testing" class="headerlink" title="Why fuzz testing"></a>Why fuzz testing</h2><p>Fuzz testing is valuable for:</p><ul><li>Software that receives inputs from untrusted sources (security);</li><li>Sanity checking the equivalence of two complex algorithms (correctness);</li><li>Verifying the stability of a high-volume API that takes complex inputs (stability), e.g. a decompressor, even if all the inputs are trusted.</li></ul><p>Fuzz testing finds programming errors unrelated to the project requirements. Errors are always errors, e.g. memory leaks or buffer overflows. Developers will rarely write tests to try and catch these types of bugs, and these are exactly the types of bugs that lead to security holes and reliability problems. Fuzzing is a great and very effective way to find these bugs before they hit you in production or the bad guys exploit them.</p><h3 id="Fuzzing-is-typically-used-to-find-the-following-kinds-of-bugs"><a href="#Fuzzing-is-typically-used-to-find-the-following-kinds-of-bugs" class="headerlink" title="Fuzzing is typically used to find the following kinds of bugs"></a>Fuzzing is typically used to find the following kinds of bugs</h3><ol><li>Bugs specific to C&#x2F;C++ that require the <a href="https://github.com/google/sanitizers"><em>sanitizers</em></a> to catch:<ul><li>Use-after-free, buffer overflows</li><li>Uses of uninitialized memory</li><li>Memory leaks</li></ul></li><li>Arithmetic bugs:<br>Div-by-zero, int&#x2F;float overflows, invalid bitwise shifts</li><li>Plain crashes:<br>NULL dereferences, Uncaught exceptions</li><li>Concurrency bugs:<br>Data races, Deadlocks</li><li>Resource usage bugs:<br>Memory exhaustion, hangs or infinite loops, infinite recursion (stack overflows)</li><li>Logical bugs:    <ul><li>Discrepancies between two implementations of the same protocol (<a href="https://blog.fuzzing-project.org/31-Fuzzing-Math-miscalculations-in-OpenSSLs-BN_mod_exp-CVE-2015-3193.html">example</a>)</li><li>Round-trip consistency bugs (e.g. compress the input, decompress back, - compare with the original)    </li><li>Assertion failures</li></ul></li></ol><p>Most of these are exactly the kinds of bugs that attackers use to produce exploits, from denial-of-service through to full remote code execution.</p><h2 id="Fuzzing-tools"><a href="#Fuzzing-tools" class="headerlink" title="Fuzzing tools"></a>Fuzzing tools</h2><h3 id="libFuzzer"><a href="#libFuzzer" class="headerlink" title="libFuzzer"></a>libFuzzer</h3><p>libFuzzer is a library for coverage-guided fuzz testing. It is supported by Clang (starting from 6.0).</p><ol><li><p>Steps to use libFuzzer:</p><ul><li>Install llvm-clang in your system.</li><li>write an entry function to invoke the fuzz function.</li><li>compile your code with “-fsanitize&#x3D;address, -fsanitize&#x3D;fuzzer” option to turn on fuzzing and ASAN.</li><li>Run the executable file you get with the options you input.</li></ul></li><li><p>Reference:</p><ul><li><a href="https://llvm.org/docs/LibFuzzer.html">libFuzzer offical documents</a></li><li><a href="https://github.com/google/fuzzing/blob/master/tutorial/libFuzzerTutorial.md">libFuzzer tutorial</a></li></ul></li></ol><h3 id="AFL"><a href="#AFL" class="headerlink" title="AFL"></a>AFL</h3><h3 id="FuzzTest"><a href="#FuzzTest" class="headerlink" title="FuzzTest"></a>FuzzTest</h3><h2 id="Tool-usage"><a href="#Tool-usage" class="headerlink" title="Tool usage"></a>Tool usage</h2><h3 id="libFuzzer-1"><a href="#libFuzzer-1" class="headerlink" title="libFuzzer"></a>libFuzzer</h3><ol><li>Write fuzzer code<br> refer to <a href="https://github.com/google/fuzzing/blob/master/tutorial/libFuzzerTutorial.md">libFuzzer tutorial</a>, easy and clear.</li><li>Build the fuzzer<ul><li><p>Under Windows:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clang -fsanitize=address -fsanitize=fuzzer -g ./source.c ./dependent.c -o ./out.exe -O2</span><br></pre></td></tr></table></figure><ol><li>-fsanitize&#x3D;address means opening the address sanitizer (In windows, only ASAN supported)</li><li>-fsanitize&#x3D;fuzzer means using the libfuzzer in llvm suite</li><li>-g means showing the detail of the compiling process</li></ol>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clang -fsanitize=address -fsanitize=fuzzer -fprofile-instr-generate -fcoverage-mapping -g ./source.c ./dependent.c -o ./out.exe -O2</span><br></pre></td></tr></table></figure><ol><li>-fporfile-instr-generate and  -fcoverage-mapping is to enable the coverage while compiling the code</li><li>If you want to visualize the result, you can refer to <a href="https://clang.llvm.org/docs/SourceBasedCodeCoverage.html">SourceBasedCodeCoverage</a>, follow the steps they provide</li></ol></li><li><p>Under MacOS:<br>  same as on Windows</p></li><li><p>Under Linux:<br>  same as on Windows</p></li></ul></li><li>Use fuzzer program<ul><li><p>Build a corpus:<br>   corpus is a set of valid and invalid input files designated by users, it can help the fuzzer program generate more usable testing cases. For example, if your program is a PE file parser, the corpus can be some valid PE files and some txt files. The corpus of libfuzzer is acutally a directory with desired input inside. AND, it’s also OK if you run the fuzzer program without a corpus, but the performance of libfuzzer won’t be very beautiful.</p></li><li><p>Merge the corpora:<br>   If you have several corpora generated from the same file, the you can run the cmd below</p>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./fuzzer.exe -merge=1 ./corpus_1/ ./corpus_2/</span><br></pre></td></tr></table></figure><p>   to merge two corpora to one, in the example above, the coveraged path in .&#x2F;corpus_2 will be merged to .&#x2F;corpus_1.</p></li><li><p>Running the fuzzer:</p><ol><li>multi-process fuzzing   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./fuzzer.exe -detect_leaks=1 -<span class="built_in">jobs</span>=4 -workers=4 -rss_limit_mb=32000 -runs=50</span><br></pre></td></tr></table></figure></li></ol><ul><li>-detect_leaks&#x3D;1, try to detect memory leaks during fuzzing</li><li>-jobs&#x3D;10, number of fuzzing jobs to run to completion</li><li>-workers&#x3D;4, ideally will distribute 4 cpu core to execute 4 process processing the fuzzing tasks, but acually if your cpu only has let’s say 4 cores, then the practical running processes will only be min(jobs, cpu core&#x2F;2) &#x3D; 2.</li></ul>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">The relationship between job and worker:</span><br><span class="line">        job No.1    __ worker NO.1</span><br><span class="line">                    |_ worker NO.2</span><br><span class="line">                    |_ worker NO.3</span><br><span class="line">                    |_ worker No.4</span><br><span class="line"></span><br><span class="line">        job No.2    __ worker NO.1</span><br><span class="line">                    |_ worker NO.2</span><br><span class="line">                    |_ worker NO.3</span><br><span class="line">                    |_ worker No.4</span><br></pre></td></tr></table></figure></li><li></li></ul></li></ol><h2 id="Result-analysis"><a href="#Result-analysis" class="headerlink" title="Result analysis"></a>Result analysis</h2><h3 id="libFuzzer-2"><a href="#libFuzzer-2" class="headerlink" title="libFuzzer"></a>libFuzzer</h3><ol><li>Sample result analysis (without error found)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INFO: Seed: 1523017872</span><br><span class="line">INFO: Loaded 1 modules (16 guards): [0x744e60, 0x744ea0),</span><br><span class="line">INFO: -max_len is not provided, using 64</span><br><span class="line">INFO: A corpus is not provided, starting from an empty corpus</span><br><span class="line"><span class="comment">#0    READ units: 1</span></span><br><span class="line"><span class="comment">#1    INITED cov: 3 ft: 2 corp: 1/1b exec/s: 0 rss: 24Mb</span></span><br><span class="line"><span class="comment">#3811 NEW    cov: 4 ft: 3 corp: 2/2b exec/s: 0 rss: 25Mb L: 1 MS: 5 ChangeBit-ChangeByte-ChangeBit-ShuffleBytes-ChangeByte-</span></span><br><span class="line"><span class="comment">#3827 NEW    cov: 5 ft: 4 corp: 3/4b exec/s: 0 rss: 25Mb L: 2 MS: 1 CopyPart-</span></span><br><span class="line"><span class="comment">#3963 NEW    cov: 6 ft: 5 corp: 4/6b exec/s: 0 rss: 25Mb L: 2 MS: 2 ShuffleBytes-ChangeBit-</span></span><br><span class="line"><span class="comment">#4167 NEW    cov: 7 ft: 6 corp: 5/9b exec/s: 0 rss: 25Mb L: 3 MS: 1 InsertByte-</span></span><br></pre></td></tr></table></figure></li></ol><p>INFO analysis:</p><ul><li>Seed: the currently using random seed.</li><li>-max_len: the maximum length of the random input, can be assigned by user or automatically assigned by the program.</li><li>corpus: the dictionary directory which can help the program generate more fitted input.</li></ul><p>Formal round analysis:</p><ul><li>#Number: Which round of fuzzing is going on.</li><li>Event code: READ, INITED, NEW … refer to <a href="https://llvm.org/docs/LibFuzzer.html#output">output code</a></li><li>cov: Total number of code blocks or edges covered by executing the <strong>current</strong> corpus</li><li>ft: libFuzzer uses different signals to evaluate the code coverage: edge coverage, edge counters, value profiles, indirect caller&#x2F;callee pairs, etc. These signals combined are called features (ft:)</li><li>corp: Number of entries in the current in-memory test corpus and its size in bytes</li><li>exec&#x2F;s: Number of fuzzer iterations per second</li><li>rss: Current memory consumption</li><li>L: Size of the new input in bytes</li><li>MS: Count and list of the mutation operations used to generate the input</li></ul><ol><li>Real case result analysis (with error found)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">BC277F8184738644C504ACDFF22048E0BC277F8184738644C504ACDFF22048E0B05556AC7363B8E560A317DA6654A49DBC277F8184738644C504ACDFF22048E0==15656==ERROR: AddressSanitizer failed to allocate 0x61635000 (1633898496) bytes of LargeMmapAllocator (error code: 1455)</span><br><span class="line">==15656==Dumping process modules:</span><br><span class="line">        0x7ff786c60000-0x7ff7877e5000 C:\Project\out.exe</span><br><span class="line">        0x7ff8ba770000-0x7ff8ba782000 C:\WINDOWS\SYSTEM32\kernel.appcore.dll</span><br><span class="line">        0x7ff8bd940000-0x7ff8bdc36000 C:\WINDOWS\System32\KERNELBASE.dll</span><br><span class="line">        0x7ff8beb80000-0x7ff8bec1e000 C:\WINDOWS\System32\msvcrt.dll</span><br><span class="line">        0x7ff8bfc90000-0x7ff8bfdb3000 C:\WINDOWS\System32\RPCRT4.dll</span><br><span class="line">        0x7ff8c0150000-0x7ff8c020d000 C:\WINDOWS\System32\KERNEL32.DLL</span><br><span class="line">        0x7ff8c0250000-0x7ff8c0448000 C:\WINDOWS\SYSTEM32\ntdll.dll</span><br><span class="line">AddressSanitizer: CHECK failed: sanitizer_common.cpp:61 <span class="string">&quot;((0 &amp;&amp; &quot;</span>unable to mmap<span class="string">&quot;)) != (0)&quot;</span> (0x0, 0x0) (tid=77952)</span><br><span class="line">    <span class="comment">#0 0x7ff786c91d98 in __asan::CheckUnwind C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\asan\asan_rtl.cpp:69</span></span><br><span class="line">    <span class="comment">#1 0x7ff786c76b24 in __sanitizer::CheckFailed(char const *, int, char const *, unsigned __int64, unsigned __int64) C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\sanitizer_common\sanitizer_termination.cpp:86</span></span><br><span class="line">    <span class="comment">#2 0x7ff786c87246 in __sanitizer::ReportMmapFailureAndDie(unsigned __int64, char const *, char const *, unsigned int, bool) C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\sanitizer_common\sanitizer_common.cpp:61</span></span><br><span class="line">    <span class="comment">#3 0x7ff786c76f31 in __sanitizer::ReturnNullptrOnOOMOrDie C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\sanitizer_common\sanitizer_win.cpp:172</span></span><br><span class="line">    <span class="comment">#4 0x7ff786c76f31 in __sanitizer::MmapOrDieOnFatalError(unsigned __int64, char const *) C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\sanitizer_common\sanitizer_win.cpp:1e_18.1.8\llvm-project\compiler-rt\lib\sanitizer_common\sanitizer_allocator_secondary.h:97</span></span><br><span class="line">    <span class="comment">#6 0x7ff786caf1bb in __sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;,__san, struct __sanitizer::LocalAddressSpacitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\sanitizer_common\sanitizer_allocator_sanitizer_common\sanitizer_allocator_scombined.h:71</span></span><br><span class="line">    <span class="comment">#7 0x7ff786caf1bb in __asan::Allocator::Allocate(unsigned __int64, unsigned __int64, struct __sanitizer::BufferedStackTrace *, enum __asan::Alitizer::LargeMmapAllocatorPtrArrayDynalocType, bool) C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\asan\asan_allocator.cpp:582</span></span><br><span class="line">    <span class="comment">#8 0x7ff786caee99 in __asan::asan_malloc(unsigned __int64, struct __sanitizer::BufferedStackTrace *) C:\src\llvm_package_18.1.8\llvm-project\clocType, bool) C:\src\llvm_package_18.ompiler-rt\lib\asan\asan_allocator.cpp:1000</span></span><br><span class="line">    <span class="comment">#9 0x7ff786c98553 in malloc C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\asan\asan_malloc_win.cpp:99                               ompiler-rt\lib\asan\asan_allocator.cpp</span></span><br><span class="line">    <span class="comment">#10 0x7ff786c62c77 in xxxxxx_x_x_x_x C:\xxxxx_xxxxxx.c:221      </span></span><br><span class="line">    <span class="comment">#11 0x7ff786c611ee in LLVMFuzzerTestOneInput C:\playxxxxxxx.c:46</span></span><br><span class="line">    <span class="comment">#12 0x7ff786cdc729 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const *, unsigned __int64) C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\fuzzer\FuzzerLoop.cpp:614</span></span><br><span class="line">    <span class="comment">#13 0x7ff786cdd3eb in fuzzer::Fuzzer::TryDetectingAMemoryLeak(unsigned char const *, unsigned __int64, bool) C:\src\llvm_package_18.1.8\llvm-pr-rt\lib\fuzzer\FuzzerLoop.cpp:614    roject\compiler-rt\lib\fuzzer\FuzzerLoop.cpp:690                                                                                                  roject\compiler-rt\lib\fuzzer\FuzzerLo</span></span><br><span class="line">    <span class="comment">#14 0x7ff786cdd717 in fuzzer::Fuzzer::MutateAndTestOne(void) C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\fuzzer\FuzzerLoop.cpp:762</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#15 0x7ff786cde2e5 in fuzzer::Fuzzer::Loop(class std::vector&lt;struct fuzzer::SizedFile, class std::allocator&lt;struct fuzzer::SizedFile&gt;&gt; &amp;) C:\src\llvm_package_18.1.8\llvm-project\corc\llvm_package_18.1.8\llvm-project\compiler-rt\lib\fuzzer\FuzzerLoop.cpp:905</span></span><br><span class="line">    <span class="comment">#16 0x7ff786cfaffc in fuzzer::FuzzerDriver(int *, char ***, int (__cdecl *)(unsigned char const *, unsigned __int64)) C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\fuzzer.8\llvm-project\compiler-rt\lib\fuzzer\FuzzerDriver.cpp:914</span></span><br><span class="line">    <span class="comment">#17 0x7ff786cb6d62 in main C:\src\llvm_package_18.1.8\llvm-project\compiler-rt\lib\fuzzer\FuzzerMain.cpp:20</span></span><br><span class="line">    <span class="comment">#18 0x7ff786d07b6b in invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78</span></span><br><span class="line">    <span class="comment">#19 0x7ff786d07b6b in __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288</span></span><br><span class="line">    <span class="comment">#20 0x7ff8c0167343  (C:\WINDOWS\System32\KERNEL32.DLL+0x180017343)</span></span><br><span class="line">    <span class="comment">#21 0x7ff8c029cc90  (C:\WINDOWS\SYSTEM32\ntdll.dll+0x18004cc90)</span></span><br><span class="line"></span><br><span class="line">MS: 3 ChangeByte-InsertRepeatedBytes-CrossOver-; base unit: 093656ecd97bcd7d4fac99048da35ccc334c11d3</span><br><span class="line">artifact_prefix=<span class="string">&#x27;./&#x27;</span>; Test unit written to ./crash-197275936eb03f16ab89f9eabe73b665728c3c32</span><br></pre></td></tr></table></figure>Error Analysis: the mechanism of libfuzzer of finding errors is actually using address sanitizers to check if there’s any illegal memory occuring. If yes, then the libfuzzer will break and return the error message.<br>The way we analyze error messages are given as below:<ul><li>Find out the error type, it is “AddressSanitizer failed to allocate” in this case.</li><li>Locate the error function in our testing code.</li><li>Comment the code and execute the fuzz again to see if the error happens again.</li><li>Organize your logic and see if it’s a false negative or real error.</li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> fuzz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PE Format</title>
      <link href="/2024/04/01/reverse%20engineering/PE%20File/PE_Format/"/>
      <url>/2024/04/01/reverse%20engineering/PE%20File/PE_Format/</url>
      
        <content type="html"><![CDATA[<h2 id="Table-of-Content"><a href="#Table-of-Content" class="headerlink" title="Table of Content"></a>Table of Content</h2><ul><li><a href="#table-of-content">Table of Content</a></li><li><a href="#basic-structure">Basic Structure</a><ul><li><a href="#1-pe-file">1. PE File</a></li><li><a href="#2-ms-dos-stub">2. MS-DOS stub</a><ul><li><a href="#dos-header">DOS Header</a></li><li><a href="#dos-stub">DOS stub</a></li><li><a href="#rich-header">Rich Header</a></li></ul></li><li><a href="#3-nt-header">3. NT Header</a><ul><li><a href="#nt-signature">NT Signature</a></li><li><a href="#file-header">File Header</a></li><li><a href="#optional-header">Optional Header</a></li></ul></li><li><a href="#4-section-header">4. Section Header</a></li><li><a href="#5-sections">5. Sections</a><ul><li><a href="#standard-sections">Standard Sections</a></li><li><a href="#self-defined-sections">Self-defined Sections</a></li></ul></li><li><a href="#6-appending-content">6. Appending Content</a></li></ul></li><li><a href="#c-code-of-the-data-structures-above">C++ code of the data structures above</a><ul><li><a href="#dos-header-1">DOS Header</a></li><li><a href="#nt-header">NT Header</a><ul><li><a href="#nt-signature-1">NT Signature</a></li><li><a href="#file-header-1">File Header</a></li><li><a href="#optional-header-1">Optional Header</a></li></ul></li><li><a href="#section-header">Section Header</a></li></ul></li><li><a href="#parse-pe-files">Parse PE files</a><ul><li><a href="#from-image">From image</a></li><li><a href="#from-memory">From Memory</a></li></ul></li></ul><h2 id="Basic-Structure"><a href="#Basic-Structure" class="headerlink" title="Basic Structure"></a>Basic Structure</h2><p><img src="/images/pe/pe_structure.PNG" alt="img1"></p><h3 id="1-PE-File"><a href="#1-PE-File" class="headerlink" title="1. PE File"></a>1. PE File</h3><p>PE stands for Portable Executable, it’s a file format for executables used in Windows operating systems, it’s based on the COFF file format (Common Object File Format).</p><p><strong>Commonly used extensions for PE format</strong>     </p><table><thead><tr><th>Name</th><th>Usage</th></tr></thead><tbody><tr><td>.exe</td><td>executable files</td></tr><tr><td>.dll</td><td>dynamic-link library files</td></tr><tr><td>.sys</td><td>system files</td></tr><tr><td>.ocx</td><td>ActiveX control files</td></tr><tr><td>.scr</td><td>screensaver files</td></tr><tr><td>.cpl</td><td>Control Panel extension files</td></tr><tr><td>.mui</td><td>Multilingual User Interface (MUI) files</td></tr></tbody></table><p>In general, A PE file is a data structure storing basic information for OS to load the file, and it also contains some meta data for non-standard usage.</p><h3 id="2-MS-DOS-stub"><a href="#2-MS-DOS-stub" class="headerlink" title="2. MS-DOS stub"></a>2. MS-DOS stub</h3><p>MS-DOS stub includes <em><strong>DOS Header</strong></em> and <em><strong>DOS stub</strong></em>.    </p><h4 id="DOS-Header"><a href="#DOS-Header" class="headerlink" title="DOS Header"></a>DOS Header</h4><p>It is a small data structure that appears at the beginning of most executable files in the Portable Executable (PE) format. It serves historical and compatibility purposes.</p><h4 id="DOS-stub"><a href="#DOS-stub" class="headerlink" title="DOS stub"></a>DOS stub</h4><p>MS-DOS program stub, this stub might display a message such as “This program cannot be run in MS-DOS mode” or perform other simple tasks. Its purpose is to provide a message to users attempting to run the executable in MS-DOS mode, as well as to ensure compatibility with older versions of Windows that boot with MS-DOS as the underlying platform.</p><h4 id="Rich-Header"><a href="#Rich-Header" class="headerlink" title="Rich Header"></a>Rich Header</h4><p>The above info is the documented info from MSFT, but actually there is an undocumented section in PE format, which is called <em><strong>Rich Header</strong></em>.<br>It is a section created by MSFT compilation toolchain, it located between the MS-DOS stub and NT Header. The content of it is obfuscated.</p><h3 id="3-NT-Header"><a href="#3-NT-Header" class="headerlink" title="3. NT Header"></a>3. NT Header</h3><h4 id="NT-Signature"><a href="#NT-Signature" class="headerlink" title="NT Signature"></a>NT Signature</h4><p>It is a 4 bytes long signature, typically the characters “PE\0\0” (0x50 0x45 0x00 0x00 in hexadecimal), indicating that the file is a PE format executable.</p><h4 id="File-Header"><a href="#File-Header" class="headerlink" title="File Header"></a>File Header</h4><p>It provides general information about the structure and properties of the PE file. This includes details such as the target machine architecture, the number of sections in the file, the timestamp of when the file was created, and other flags and characteristics.</p><h4 id="Optional-Header"><a href="#Optional-Header" class="headerlink" title="Optional Header"></a>Optional Header</h4><p>It contains additional information specific to the PE format. This includes details such as the size of various sections, the entry point of the executable, the preferred base address for loading the executable into memory, the address of the import table, the size of the stack and heap, and more.    </p><p>Inside the Optional Header, there is a very important part called <em><strong>Data Directory</strong></em>. It specify the locations and sizes of various data structures used by the executable. These data structures include the import table, export table, resource table, debug information, and more.</p><h3 id="4-Section-Header"><a href="#4-Section-Header" class="headerlink" title="4. Section Header"></a>4. Section Header</h3><p>It contains detailed information about each section present in the file. Each section header describes a specific segment of the PE file, such as code, data, resources, or other types of data.</p><h3 id="5-Sections"><a href="#5-Sections" class="headerlink" title="5. Sections"></a>5. Sections</h3><h4 id="Standard-Sections"><a href="#Standard-Sections" class="headerlink" title="Standard Sections"></a>Standard Sections</h4><p>Not all of these sections will appear in the PE file. The appearence of them depends on whether the PE file needs them or not.</p><ul><li><p>Text (or Code) Section: This section contains executable code that the program will run. It typically has read and execute permissions but not write permissions.</p></li><li><p>Data Section: This section contains initialized global and static variables used by the program. It typically has read and write permissions but not execute permissions.</p></li><li><p>Resource Section: This section contains resources such as icons, images, dialogs, strings, and other data used by the program. Resources can be accessed by the program at runtime.</p></li><li><p>Import Section: This section contains information about external functions and symbols that the program imports from DLLs or other executables. It includes import tables that specify the names and addresses of imported functions.</p></li><li><p>Export Section: This section contains information about functions and symbols that the program exports for use by other programs. It includes export tables that specify the names and addresses of exported functions.</p></li><li><p>Relocation Section: This section contains information about positions in the code and data sections that need to be adjusted if the executable is loaded at a different base address in memory. It facilitates the process of relocating the executable.</p></li><li><p>Debug Section: This section contains debugging information used by debuggers and other development tools. It includes symbols, line numbers, and other metadata for debugging purposes.</p></li><li><p>TLS (Thread Local Storage) Section: This section contains data structures used for thread-local storage, which allows variables to have unique values per thread in a multi-threaded program.</p></li><li><p>Load Configuration Section: This section contains information about the preferred base address, size of the stack and heap, and other memory allocation preferences specified by the program.</p></li></ul><h4 id="Self-defined-Sections"><a href="#Self-defined-Sections" class="headerlink" title="Self-defined Sections"></a>Self-defined Sections</h4><p>Developer can self-define any sections they want and combine it into the PE file. But there’s also an unwritten routine for the naming of them, for better understanding it please refer to real world PE files.</p><h3 id="6-Appending-Content"><a href="#6-Appending-Content" class="headerlink" title="6. Appending Content"></a>6. Appending Content</h3><p>Basically this part is not a part of standard PE file. But for many famous products, you can find that the PE file doesn’t end after all sections are loaded. There is an appending content at the end of the content of the sections.    </p><p>Normally this part is used to store some important information of the file, but the information is too long that not able to be stored at any of the original data structure in a PE file.</p><h2 id="C-code-of-the-data-structures-above"><a href="#C-code-of-the-data-structures-above" class="headerlink" title="C++ code of the data structures above"></a>C++ code of the data structures above</h2><p>You can find all of the following code in header &lt;winnt.h&gt;.</p><h3 id="DOS-Header-1"><a href="#DOS-Header-1" class="headerlink" title="DOS Header"></a>DOS Header</h3><pre><code><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_DOS_HEADER</span> &#123;</span><br><span class="line">    WORD  e_magic;      <span class="comment">/* 00: MZ Header signature */</span></span><br><span class="line">    WORD  e_cblp;       <span class="comment">/* 02: Bytes on last page of file */</span></span><br><span class="line">    WORD  e_cp;         <span class="comment">/* 04: Pages in file */</span></span><br><span class="line">    WORD  e_crlc;       <span class="comment">/* 06: Relocations */</span></span><br><span class="line">    WORD  e_cparhdr;    <span class="comment">/* 08: Size of header in paragraphs */</span></span><br><span class="line">    WORD  e_minalloc;   <span class="comment">/* 0a: Minimum extra paragraphs needed */</span></span><br><span class="line">    WORD  e_maxalloc;   <span class="comment">/* 0c: Maximum extra paragraphs needed */</span></span><br><span class="line">    WORD  e_ss;         <span class="comment">/* 0e: Initial (relative) SS value */</span></span><br><span class="line">    WORD  e_sp;         <span class="comment">/* 10: Initial SP value */</span></span><br><span class="line">    WORD  e_csum;       <span class="comment">/* 12: Checksum */</span></span><br><span class="line">    WORD  e_ip;         <span class="comment">/* 14: Initial IP value */</span></span><br><span class="line">    WORD  e_cs;         <span class="comment">/* 16: Initial (relative) CS value */</span></span><br><span class="line">    WORD  e_lfarlc;     <span class="comment">/* 18: File address of relocation table */</span></span><br><span class="line">    WORD  e_ovno;       <span class="comment">/* 1a: Overlay number */</span></span><br><span class="line">    WORD  e_res[<span class="number">4</span>];     <span class="comment">/* 1c: Reserved words */</span></span><br><span class="line">    WORD  e_oemid;      <span class="comment">/* 24: OEM identifier (for e_oeminfo) */</span></span><br><span class="line">    WORD  e_oeminfo;    <span class="comment">/* 26: OEM information; e_oemid specific */</span></span><br><span class="line">    WORD  e_res2[<span class="number">10</span>];   <span class="comment">/* 28: Reserved words */</span></span><br><span class="line">    DWORD e_lfanew;     <span class="comment">/* 3c: Offset to extended header */</span></span><br><span class="line">&#125; IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;</span><br></pre></td></tr></table></figure></code></pre><h3 id="NT-Header"><a href="#NT-Header" class="headerlink" title="NT Header"></a>NT Header</h3><p>There are two types of NT Headers, 32-bits and 64-bits version. The only difference between them is the structure of <em><strong>Optional Header</strong></em>.</p><ul><li><p>NT Header 64 bits</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_NT_HEADERS64</span> &#123;</span><br><span class="line">    DWORD Signature;</span><br><span class="line">    IMAGE_FILE_HEADER FileHeader;</span><br><span class="line">    IMAGE_OPTIONAL_HEADER64 OptionalHeader;</span><br><span class="line">&#125; IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64;</span><br></pre></td></tr></table></figure></li><li><p>NT Header 32 bits</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_NT_HEADERS</span> &#123;</span><br><span class="line">    DWORD Signature; <span class="comment">/* &quot;PE&quot;\0\0 */</span><span class="comment">/* 0x00 */</span></span><br><span class="line">    IMAGE_FILE_HEADER FileHeader;<span class="comment">/* 0x04 */</span></span><br><span class="line">    IMAGE_OPTIONAL_HEADER32 OptionalHeader;<span class="comment">/* 0x18 */</span></span><br><span class="line">&#125; IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32;</span><br></pre></td></tr></table></figure></li></ul><h4 id="NT-Signature-1"><a href="#NT-Signature-1" class="headerlink" title="NT Signature"></a>NT Signature</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> IMAGE_NT_SIGNATURE     0x00004550 <span class="comment">/* PE00 */</span></span></span><br></pre></td></tr></table></figure><h4 id="File-Header-1"><a href="#File-Header-1" class="headerlink" title="File Header"></a>File Header</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_FILE_HEADER</span> &#123;</span><br><span class="line">    WORD  Machine;</span><br><span class="line">    WORD  NumberOfSections;</span><br><span class="line">    DWORD TimeDateStamp;</span><br><span class="line">    DWORD PointerToSymbolTable;</span><br><span class="line">    DWORD NumberOfSymbols;</span><br><span class="line">    WORD  SizeOfOptionalHeader;</span><br><span class="line">    WORD  Characteristics;</span><br><span class="line">&#125; IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;</span><br></pre></td></tr></table></figure><h4 id="Optional-Header-1"><a href="#Optional-Header-1" class="headerlink" title="Optional Header"></a>Optional Header</h4><p>There are 32 bits and 64 bits Optional Header. The former one contains one more variable: </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DWORD BaseOfData</span><br></pre></td></tr></table></figure><ul><li><p>32 bits Optional Header</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_OPTIONAL_HEADER</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Standard fields */</span></span><br><span class="line"></span><br><span class="line">    WORD  Magic; <span class="comment">/* 0x10b or 0x107 */</span><span class="comment">/* 0x00 */</span></span><br><span class="line">    BYTE  MajorLinkerVersion;</span><br><span class="line">    BYTE  MinorLinkerVersion;</span><br><span class="line">    DWORD SizeOfCode;</span><br><span class="line">    DWORD SizeOfInitializedData;</span><br><span class="line">    DWORD SizeOfUninitializedData;</span><br><span class="line">    DWORD AddressOfEntryPoint;<span class="comment">/* 0x10 */</span></span><br><span class="line">    DWORD BaseOfCode;</span><br><span class="line">    DWORD BaseOfData;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* NT additional fields */</span></span><br><span class="line"></span><br><span class="line">    DWORD ImageBase;</span><br><span class="line">    DWORD SectionAlignment;<span class="comment">/* 0x20 */</span></span><br><span class="line">    DWORD FileAlignment;</span><br><span class="line">    WORD  MajorOperatingSystemVersion;</span><br><span class="line">    WORD  MinorOperatingSystemVersion;</span><br><span class="line">    WORD  MajorImageVersion;</span><br><span class="line">    WORD  MinorImageVersion;</span><br><span class="line">    WORD  MajorSubsystemVersion;<span class="comment">/* 0x30 */</span></span><br><span class="line">    WORD  MinorSubsystemVersion;</span><br><span class="line">    DWORD Win32VersionValue;</span><br><span class="line">    DWORD SizeOfImage;</span><br><span class="line">    DWORD SizeOfHeaders;</span><br><span class="line">    DWORD CheckSum;<span class="comment">/* 0x40 */</span></span><br><span class="line">    WORD  Subsystem;</span><br><span class="line">    WORD  DllCharacteristics;</span><br><span class="line">    DWORD SizeOfStackReserve;</span><br><span class="line">    DWORD SizeOfStackCommit;</span><br><span class="line">    DWORD SizeOfHeapReserve;<span class="comment">/* 0x50 */</span></span><br><span class="line">    DWORD SizeOfHeapCommit;</span><br><span class="line">    DWORD LoaderFlags;</span><br><span class="line">    DWORD NumberOfRvaAndSizes;</span><br><span class="line">    IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES]; <span class="comment">/* 0x60 */</span></span><br><span class="line">    <span class="comment">/* 0xE0 */</span></span><br><span class="line">&#125; IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;</span><br></pre></td></tr></table></figure></li><li><p>64 bits Optional Header</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_OPTIONAL_HEADER64</span> &#123;</span><br><span class="line">    WORD  Magic; <span class="comment">/* 0x20b */</span></span><br><span class="line">    BYTE MajorLinkerVersion;</span><br><span class="line">    BYTE MinorLinkerVersion;</span><br><span class="line">    DWORD SizeOfCode;</span><br><span class="line">    DWORD SizeOfInitializedData;</span><br><span class="line">    DWORD SizeOfUninitializedData;</span><br><span class="line">    DWORD AddressOfEntryPoint;</span><br><span class="line">    DWORD BaseOfCode;</span><br><span class="line">    ULONGLONG ImageBase;</span><br><span class="line">    DWORD SectionAlignment;</span><br><span class="line">    DWORD FileAlignment;</span><br><span class="line">    WORD MajorOperatingSystemVersion;</span><br><span class="line">    WORD MinorOperatingSystemVersion;</span><br><span class="line">    WORD MajorImageVersion;</span><br><span class="line">    WORD MinorImageVersion;</span><br><span class="line">    WORD MajorSubsystemVersion;</span><br><span class="line">    WORD MinorSubsystemVersion;</span><br><span class="line">    DWORD Win32VersionValue;</span><br><span class="line">    DWORD SizeOfImage;</span><br><span class="line">    DWORD SizeOfHeaders;</span><br><span class="line">    DWORD CheckSum;</span><br><span class="line">    WORD Subsystem;</span><br><span class="line">    WORD DllCharacteristics;</span><br><span class="line">    ULONGLONG SizeOfStackReserve;</span><br><span class="line">    ULONGLONG SizeOfStackCommit;</span><br><span class="line">    ULONGLONG SizeOfHeapReserve;</span><br><span class="line">    ULONGLONG SizeOfHeapCommit;</span><br><span class="line">    DWORD LoaderFlags;</span><br><span class="line">    DWORD NumberOfRvaAndSizes;</span><br><span class="line">    IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];</span><br><span class="line">&#125; IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Section-Header"><a href="#Section-Header" class="headerlink" title="Section Header"></a>Section Header</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_IMAGE_SECTION_HEADER</span> &#123;</span><br><span class="line">    BYTE  Name[IMAGE_SIZEOF_SHORT_NAME];</span><br><span class="line">    <span class="keyword">union</span> &#123;</span><br><span class="line">    DWORD PhysicalAddress;</span><br><span class="line">    DWORD VirtualSize;</span><br><span class="line">    &#125; Misc;</span><br><span class="line">    DWORD VirtualAddress;</span><br><span class="line">    DWORD SizeOfRawData;</span><br><span class="line">    DWORD PointerToRawData;</span><br><span class="line">    DWORD PointerToRelocations;</span><br><span class="line">    DWORD PointerToLinenumbers;</span><br><span class="line">    WORD  NumberOfRelocations;</span><br><span class="line">    WORD  NumberOfLinenumbers;</span><br><span class="line">    DWORD Characteristics;</span><br><span class="line">&#125; IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;</span><br></pre></td></tr></table></figure><p>For the comments of the variables in the code above, you can find them easily in the MSFT official document.</p><h2 id="Parse-PE-files"><a href="#Parse-PE-files" class="headerlink" title="Parse PE files"></a>Parse PE files</h2><h3 id="From-image"><a href="#From-image" class="headerlink" title="From image"></a>From image</h3><ol><li>Use file handler to read the file into the memory.</li><li>fwrite() the first 64 bits into an instance of data structure IMAGE_DOS_HEADER.</li><li>Use IMAGE_DOS_HEADER.e_lfanew to get the location of the starting byte of NT Header.</li><li>Use fseek() to put the file handler at that byte.</li><li>fwrite() the size of NT Header into an instance of data structure IMAGE_NT_HEADER.</li><li>Instancialize IMAGE_FILE_HEADER and IMAGE_OPTIONAL_HEADER to store File Header and Optional Header in the instance of NT Header.</li><li>Get the value of IMAGE_FILE_HEADER.NumberOfSections</li><li>Load the content left from the file handler to a pointer of PIMAGE_SECTION_HEADER type.</li><li>Traverse the Section Headers by the pointer.</li><li>Traverse the Section Content by the IMAGE_SECTION_HEADER.PointerToRawData and IMAGE_SECTION_HEADER.SizeOfRawData variables.</li></ol><h3 id="From-Memory"><a href="#From-Memory" class="headerlink" title="From Memory"></a>From Memory</h3><ol><li>Use LoadLibrary() to get the handler of a DLL file.</li><li>Initialize the pointers of IMAGE_DOS_HEADER, let’s say<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dosHeader = <span class="built_in">LoadLibrary</span>(<span class="string">&quot;Your DLL Name&quot;</span>);</span><br></pre></td></tr></table></figure></li><li>Find the address of IMAGE_NT_HEADER, let’s say the instance of it is ntHeader<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntHeader = dosHeader-&gt;e_lfanew + dosHeader;</span><br></pre></td></tr></table></figure></li><li>Use IMAGE_FILE_HEADER (fileHeader) and IMAGE_OPTIONAL_HEADER (optionalHeader) to point to the corresponding address<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fileHeader = ntHeader + <span class="built_in">sizeof</span>(DWORD);</span><br><span class="line"></span><br><span class="line">optioanalHeader = fileHeader + <span class="built_in">sizeof</span>(IMAGE_FILE_HEADER);</span><br></pre></td></tr></table></figure></li><li>Get the address of the first Section Header (sectionHeader).<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sectionHeader = optionalHeader + fileHeader-&gt;SizeOfOptionalHeader;</span><br></pre></td></tr></table></figure></li><li>Browse the content of sections by Section Header<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sectionAddress = optionalHeader-&gt;ImageBase + sectionHeadr-&gt;VitualAddress;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> security basic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Risk Management Chapter 4 - Contingency Planning and Management</title>
      <link href="/2024/03/22/risk%20management/CH4_Contingency%20Planning&amp;Management/"/>
      <url>/2024/03/22/risk%20management/CH4_Contingency%20Planning&amp;Management/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Contingency-planning"><a href="#1-Contingency-planning" class="headerlink" title="1. Contingency planning"></a>1. Contingency planning</h2><ol><li><p>Aiming: To cope with some circumstances that normal operations are infeasible.</p></li><li><p>Why we need contingency plan?   </p><ul><li>Every system is <em><strong>imperfect</strong></em>.</li><li>There are always <em><strong>emergencies</strong></em>.</li><li>Legal <em><strong>obligation</strong></em>.</li></ul></li></ol><h2 id="2-Multiple-response-paradigm"><a href="#2-Multiple-response-paradigm" class="headerlink" title="2. Multiple response paradigm"></a>2. Multiple response paradigm</h2><ol><li><p>Taxnology of contingencies</p><table><thead><tr><th>Name</th><th>Definition</th></tr></thead><tbody><tr><td>Emergency</td><td><em><strong>Time critical</strong></em>, something time critical which needs quick response to reduce damage&#x2F;losses of people’s life, physical or information assets.</td></tr><tr><td>Cirsis</td><td><em><strong>strategic</strong></em>, A situation with potential knock-on and long term adversarial effects, affecting reputation, stock prices&#x2F;market, etc.</td></tr><tr><td>Disaster</td><td><em><strong>Physical damage</strong></em>,  Involves loss of physical assets and&#x2F;or people’s life&#x2F;health, and&#x2F;or critical IT systems.</td></tr></tbody></table></li><li><p>Business Contiguity Management   </p><ol><li><p><strong>Definition</strong>: Business Contiguity Management, namely <code>BCM</code>, is broadly defined as a business process that seeks to ensure organizations are able to withstand any disruption to normal functioning.</p></li><li><p>Steps:   </p><ol><li>Emergency response</li><li>Crisis management</li><li>Business recovery</li></ol></li><li><p>The life cycle of BCM<br> <img src="/images/risk_management_Resource4CH4/Life%20cycle%20of%20BCM.png" alt="Life Cycle of BCM"></p></li></ol></li><li><p>Business Continuity Planning</p><ol><li><p>Process   </p><ol><li>BIA &amp; RA</li><li>BC strategy fomulation</li><li>BCP production (BCP namely is Business Continuity Planning)</li><li>BCP testing</li><li>BCP awareness</li><li>Ongoing BCP maintainance</li></ol></li><li><p>PDCA (Plan, Do, Check, Act)<br> It is an iterative four step management method used in business for the control &amp; continuous improvement of processes and products.    </p><p><img src="/images/risk_management_Resource4CH4/PDPA.png" alt="PDPA"></p></li></ol></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> risk management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Risk Management Chapter 3 - Risk Analysis and Assessment</title>
      <link href="/2024/03/15/risk%20management/CH3_Risk%20Analysis&amp;Assessment/"/>
      <url>/2024/03/15/risk%20management/CH3_Risk%20Analysis&amp;Assessment/</url>
      
        <content type="html"><![CDATA[<p>First thing first, differences between risk, threat and vulnerabilities.   </p><table><thead><tr><th>Terminology</th><th>Definition</th></tr></thead><tbody><tr><td>Vulnerabilities</td><td>Weakness of an asset or control that can be exploited by one or more threats</td></tr><tr><td>Threat</td><td>Potential cause of an unwanted incident, which may result in harm to a system or organisation</td></tr><tr><td>Risk</td><td>Effect of uncertainty on objectives</td></tr></tbody></table><p>&nbsp;</p><h2 id="1-Dilemmas-for-information-security"><a href="#1-Dilemmas-for-information-security" class="headerlink" title="1. Dilemmas for information security"></a>1. Dilemmas for information security</h2><ol><li><code>Powerful attacking resource</code> VS <code>inadequate security budget</code><br>You don’t know how much attack resources the adversaries have, so it’s hard to decide how much you should pay for security. And sometimes, there are some nation state attackers, they have way more attacking resource than you could defend.</li><li><code>Complacency</code><br>Even if you deploy your defenses. You don’t know whether the security is brought by your defenses techniques or just because the attackers haven’t attacked you.</li><li><code>Compliance out of compulsion</code></li><li><code>The fallacy of relative privation</code><br>You might also be attacked even you are more secure than other guys or companies.</li></ol><p>So the conclusion is, information security shouldn’t be driven by <code>Fear</code>, <code>Uncertainty</code>, <code>Doubt</code>.</p><h2 id="2-Risk-Analysis"><a href="#2-Risk-Analysis" class="headerlink" title="2. Risk Analysis"></a>2. Risk Analysis</h2><p>Find the assets you need to secure, maximize the protection while providing functionality.<br><em><strong>Risk management is for different valuable assets, you need to investigate the logical and system boundary.</strong></em></p><ol><li><p>Multi-tier Risk Management</p><p> <img src="/images/risk_management_Resource4CH3/Multi-tier%20Risk%20Management.png" alt="multi-tier risk management"></p></li><li><p>Risk Analysis Process   </p><ol><li><p>Information gathering</p></li><li><p>Vulnerability analysis</p><p> <img src="/images/risk_management_Resource4CH3/Vulnerability%20analysis.png" alt="vulnerability analysis"></p></li><li><p>Categorize vulnerabilities -&gt; <code>Severity</code> &amp; <code>Exposure</code></p><p> <img src="/images/risk_management_Resource4CH3/Categorize%20vulnerabilities.png" alt="Categorize vulnerabilities"></p></li><li><p>Threat analysis</p><ul><li>Human Threat</li><li>Non-Human Threat</li></ul></li><li><p>Risk identification and analysis of acceptable risks</p><p> <img src="/images/risk_management_Resource4CH3/Risk%20identification.png" alt="Risk Identification"></p></li></ol></li><li><p>Risk Management Framework</p><ol><li><p>Categorize information system </p></li><li><p>Select security controls</p></li><li><p>Implement security controls</p></li><li><p>Assess security controls</p></li><li><p>Authorize information system</p></li><li><p>Monitor security controls   </p><p> <img src="/images/risk_management_Resource4CH3/Risk%20management%20framework.png" alt="risk managment framework"></p></li></ol></li><li><p><code>Qualitative</code> VS <code>Quantitative</code> analysis</p><ul><li>Quantitative is better than qualitative analysis at the most of time.</li></ul><table><thead><tr><th></th><th>Pros</th><th>Cons</th></tr></thead><tbody><tr><td>Qualitative</td><td><ol><li>Simple to use</li><li>Flexible</li><li>Cover a lot of ranges</li> </ol></td><td><ol> <li>Ambiguous</li></ol></td></tr><tr><td>Quantitative</td><td><ol> <li>easy to convince</li><li>Support budget decision</li><li>derived from irrefutable facts</li>  </ol></td><td><ol><li>Inapplicable(hard to generate&gt;</li><li>false sense of accuracy</li></ol></td></tr></tbody></table><ul><li><p><em><strong>Useful tool</strong></em>: Annualized Loss Expectancy -&gt; ALE   </p></li><li><p><em><strong>Shortcomings of ALE</strong></em>:   </p><ol><li>Cannot distinguish high-frequency, low-impact events from low frequency, high-impact events based on such a single simplified number.   </li><li>False sense of accuracy.</li><li>Not flexible.</li></ol></li></ul></li></ol><h2 id="3-Actualize-Risk-Analysis"><a href="#3-Actualize-Risk-Analysis" class="headerlink" title="3. Actualize Risk Analysis"></a>3. Actualize Risk Analysis</h2><ol><li><p>Fault Tree Analysis (FTA)<br>Using a series of lower-level events to deduct the final undesired event.   </p><p> <img src="/images/risk_management_Resource4CH3/FTA.png" alt="FTA"></p></li><li><p>Attack Trees   </p><ol><li><p>Root nodes: unwanted events   </p></li><li><p>Leaf nodes: attacks and the consequences</p><p> <img src="/images/risk_management_Resource4CH3/Attack%20Trees.png" alt="Attack Trees"></p></li></ol></li><li><p>Event Tree Analysis (ETA)<br>Explores forward (success&#x2F;failure) responses through a single initiating event. Lays a path for assessing probabilities of various outcomes.</p></li></ol><p><img src="/images/risk_management_Resource4CH3/Event%20Tree%20Analysis.png" alt="Event Tree Analysis"></p><ol start="4"><li><p>Failure Mode &amp; Effect Analysis (FMEA)   </p><ul><li><em><strong>probability</strong></em> that failure will occur.</li><li>likelihood that failure won’t be <em><strong>detected</strong></em>.</li><li><em><strong>severity</strong></em> of effects of the failure.</li></ul><p> All those three -&gt; Risk Priority Number (RPN) &#x3D; $prob<em>det</em>sev$</p></li></ol><h2 id="4-Conclusion"><a href="#4-Conclusion" class="headerlink" title="4. Conclusion"></a>4. Conclusion</h2><p>Since we don’t have infinite budget, we need to know where should we invest the money and the priorities of those places. That’s why we need <code>Risk Analysis</code>.   </p><p>To conduct this <code>Risk Analysis</code>, we need to know the process of it and what tools can we use, like FTA, ETA, FMEA etc.</p>]]></content>
      
      
      
        <tags>
            
            <tag> risk management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Risk Management Chapter 2 - Information Security Governance</title>
      <link href="/2024/03/08/risk%20management/CH2_InforSec%20Governance/"/>
      <url>/2024/03/08/risk%20management/CH2_InforSec%20Governance/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Guiding-principles"><a href="#1-Guiding-principles" class="headerlink" title="1. Guiding principles"></a>1. Guiding principles</h2><ol><li><p>Functional Security –&gt; What should the system do?</p><ol><li><p>Control:  to prevent the exploitation of a system’s vulnerabilities </p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Classification according to the purpose of controls:</span><br><span class="line">- Preventitive: authentication based access</span><br><span class="line">- Detective: intrusion detection system</span><br><span class="line">- Corrective: restore data from back-up</span><br><span class="line"></span><br><span class="line">Classification according to the nature of controls:</span><br><span class="line">- Physical: who can access the data center</span><br><span class="line">- Procedural: incident response process</span><br><span class="line">- Technical: user authentication</span><br><span class="line">- Legal &amp; regulatory/compliance: privacy laws</span><br></pre></td></tr></table></figure></li><li><p>Defense in depth &amp; layered security:<br> Defense in depth requires multi-layered defense, but multi-layered defense may not necessarily provide defense in depth.</p><table><thead><tr><th>Terminology</th><th>Definition</th></tr></thead><tbody><tr><td>Defense in depth</td><td>Multiple defense methods dealing with multiple attack vectors</td></tr><tr><td>Layered security</td><td>Could be many layers defense methods in many attack vectors, and also could be defense methods in one attack vector</td></tr></tbody></table></li><li><p>Need-to-know principle: The need-to-know principle describes a security objective to limit access to confidential information to what is absolutely necessary. </p></li><li><p>Least privilege access: same as Need-to-know principle.</p></li><li><p>Secure by design.</p></li><li><p>Zero trust.</p></li></ol></li><li><p>Security Assurance –&gt; How to ensure the functions are achieved?</p></li></ol><h2 id="2-Standards-and-guidelines"><a href="#2-Standards-and-guidelines" class="headerlink" title="2. Standards and guidelines"></a>2. Standards and guidelines</h2><ol><li><p>Standards and guidelines are <em><strong>actionalbe</strong></em> compare with principles. In another word, priciple is <em><strong>abstract</strong></em>, standard and guidelines are <em><strong>practical</strong></em>.   </p></li><li><p><em><strong>Why</strong></em> we need standards and guidelines?<br>To eradicate ambiguity. Different understanding in different minds, if you only give people principles, they might achieve it by multiple means, but some means are unsecure, so we need to articulate specifically which means are allowed to use.</p></li><li><ol><li><em><strong>Compliance</strong></em>:  A product&#x2F;organization&#x2F;etc. adhering to the requirements of a standard.   </li><li><em><strong>Certified</strong></em>:  Compliance vetted by an authoritative (and competent) entity.</li></ol></li><li><ol><li><p><em><strong>ISO&#x2F;IEC 27000</strong></em>: Information security management systems (ISMS) family of standards: ISO27k.</p></li><li><p><em><strong>Common Criteria</strong></em>: basis for evaluation of security properties of IT products. The standards used to make sure the assurance of security.</p></li><li><p>shortcomings of <em><strong>CC</strong></em>:</p><ol><li>It’s a targetd evaluation.  </li><li>It takes a lot of time and costs a lot of money.</li><li>The standards may be out-of-date.</li></ol></li></ol></li></ol><h2 id="3-Laws-and-regulations"><a href="#3-Laws-and-regulations" class="headerlink" title="3. Laws and regulations"></a>3. Laws and regulations</h2><ol><li><p>Laws and regulations in Singapore.    </p><ol><li><p><em><strong>Data backup regulation</strong></em>:</p><ol><li>update backups regularly.</li><li>encrypt the data off-site.</li></ol></li><li><p><em><strong>Internal security</strong></em>:   </p><ol><li>Never alone ( Need to have at least two people involved in a incident. )</li><li>Segregation of duties. </li><li>Access control.</li></ol></li><li><p><em><strong>Personal Data Protection Act</strong></em>:<br> Develop and implement policies and practices to protect personal data. Designate at least one individual, known as the data protection officer (DPO), to oversee the data.</p></li></ol></li><li><p>Laws and regulations in EU.</p><ol><li><p>General Data Protection Regulation (GDPR)   </p><ol><li>Revenue based fine.</li><li>Data breach notification.</li><li>Data protection officer.</li></ol></li><li><p>Right to be forgotten.</p></li></ol></li><li><p>Laws and regulations in US.</p><ol><li><p>SOX -&gt; Sarbanes Oxley Act of 2002.   </p><p> CEO and CFO must personally certify that financial reports are accurate and complete. They must also assess and report on the effectiveness of internal controls around financial reporting.</p></li><li><p>FISMA -&gt; Federal Information Security Management Act of 2002.</p></li><li><p>HIPPA -&gt; Health Insurance Portability and Accountability Act.</p></li></ol></li></ol><h2 id="4-Security-Governance"><a href="#4-Security-Governance" class="headerlink" title="4. Security Governance"></a>4. Security Governance</h2><ol><li><p>GRC -&gt; the umbrella term used to cover an organisation’s three approches across three fields.</p><ol><li><strong>Governance</strong>: The management approach used by the senior executive</li></ol></li></ol><p>to direct and control an organization.<br>    2. <strong>Risk Management</strong>: Process to identify, analyze and when necessary act, to <code>mitigate risks</code> that otherwise would affect the business objectives.<br>    3. <strong>Compliance</strong>: </p>]]></content>
      
      
      
        <tags>
            
            <tag> risk management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib doesn&#39;t support Chinese</title>
      <link href="/2024/03/03/MISC/mojibake/Matplotlib%20doesn&#39;t%20support%20Chinese/"/>
      <url>/2024/03/03/MISC/mojibake/Matplotlib%20doesn&#39;t%20support%20Chinese/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Matplotlib无法识别中文字符的Unicode，调用plot.show()函数后，原中文字符处由方框代为显示。   </p><p><img src="/images/misc/Garbled%20Characters.png" alt="Garbled Characters"></p><p>*<em>运行环境：Ubuntu 20.04 LTS，Python 3.10.<em>，matplotlib 3.8.3</em></em></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>手动下载支持Unicode中文解码的字体，给出几个例子：   </p><ul><li>简体中文 SimSun.ttf</li><li>黑体 HeiTi.ttf</li><li>雅黑 Yahei.ttf</li><li>…</li></ul><p><em><strong>注意</strong></em>，如果使用<code>ttf-microsoft-installer</code>提供的<code>fc-match</code>指令，是无法下载上文描述的字体ttf文件的，为避免后续麻烦，最好手动下载。     </p><ol><li>下载完执行如下指令,将字体复制到你的matplotlib中：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">path2ttf=$(find | grep -m 1 <span class="string">&quot;SIMSUN.ttf&quot;</span>)</span><br><span class="line">path2yourvenv=$(sudo find | grep <span class="string">&quot;matplotlib&quot;</span> | grep -m 1 <span class="string">&quot;mpl-data&quot;</span>)</span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$path2ttf</span> <span class="variable">$path2yourvenv</span>/fonts/ttf/</span><br></pre></td></tr></table></figure><ol start="2"><li><p>刷新你的<strong>matplotlib font manager cache</strong>，自行创建一个scritp.py并将下述命令键入并执行:   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.font_manager</span><br><span class="line">matplotlib.font_manager._load_fontmanager(try_read_cache=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></li><li><p>matplotlib可以解释中文了</p></li></ol><p><img src="/images/misc/Chinese%20Charecters.png" alt="Chinese Charecters"></p><h2 id="Referrence-Links"><a href="#Referrence-Links" class="headerlink" title="Referrence Links"></a>Referrence Links</h2><ol><li><p>Refresh matplotlib font manager cache   </p><p> <a href="%22https://stackoverflow.com/questions/37920935/matplotlib-cant-find-font-installed-in-my-linux-machine%22">Stack Overflow Post</a></p></li><li><p>Download SimSun.ttf for free</p><p> <a href="%22https://www.dafontfree.io/simsun-font/%22">SimSun For Free</a></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> MISC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Risk Management Chapter 1 - Concepts and Background</title>
      <link href="/2024/03/01/risk%20management/CH1_Concepts&amp;Background/"/>
      <url>/2024/03/01/risk%20management/CH1_Concepts&amp;Background/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Basic-Concepts"><a href="#1-Basic-Concepts" class="headerlink" title="1. Basic Concepts"></a>1. Basic Concepts</h2><table><thead><tr><th>Terminology</th><th>Description</th></tr></thead><tbody><tr><td>Information Security</td><td>Security about information based assests</td></tr><tr><td>Cyber Security</td><td>Security about the transmission or communication of information</td></tr></tbody></table><p>&nbsp;<br><img src="/images/risk_management_Resource4CH1/CIA%20trial.png" alt="information security to cyber security"><br>&nbsp;</p><h2 id="2-Attacks-Attackers"><a href="#2-Attacks-Attackers" class="headerlink" title="2. Attacks &amp; Attackers"></a>2. Attacks &amp; Attackers</h2><p>For an incident happened, we need to know:   </p><ol><li>Tools -&gt; ( Physical Attack&#x2F; Information Exchange&#x2F; User command&#x2F; Script or Program&#x2F; …)</li><li>Vulnerability -&gt; (Design&#x2F; Implementation&#x2F; Configuration)</li><li>Action -&gt; (Probe&#x2F; Scan&#x2F; Flood&#x2F; Authenticate&#x2F; Bypass&#x2F; Spoof&#x2F; …)</li><li>Target -&gt; (Account&#x2F; Process&#x2F; Data&#x2F; Component&#x2F; …)</li><li>Unauthorized Result -&gt; (Increased Access&#x2F; Disclosure of Information&#x2F; …)</li><li>Objectives -&gt; (Challenge, Status, Thrill&#x2F; Political Gain&#x2F; …)</li></ol><p>&nbsp;<br><img src="/images/risk_management_Resource4CH1/Incident%20layers.png" alt="Incident Layers"><br>&nbsp;</p><p>After we know how they attack, it’s easy to find their identity based on their way of attacking.   </p><p>&nbsp;<br><img src="/images/risk_management_Resource4CH1/Identities%20of%20attackers.png" alt="Identities of attackers"><br>&nbsp;</p><p>The definition of attack vector and attack surface.<br>&nbsp;</p><table><thead><tr><th>Terminology</th><th>Description</th></tr></thead><tbody><tr><td>System Hardening</td><td>reduce the attack surface</td></tr><tr><td>Attack Vector</td><td>a path or means by which one can attack a system (network, server, …) exploiting the vulnerabilities of the system</td></tr><tr><td>Attack Surface</td><td>all the attack vectors in the system put together</td></tr></tbody></table><p>&nbsp;</p><p><strong>Trinity of Troubles</strong> - Factors leading to enlarge the attack surface.</p><ol><li>Extensibility: A software which could extent extral functions.</li><li>Connectivity: There are interconnections between softwares.</li><li>Complexity: Massive codes.</li></ol><p><strong>Principles of easiest penetration</strong>:<br>An intruder must be expected to use any available means of penetration. The penetration may not necessarily be by the most obvious means, nor is it necessarily the one against which the most solid defense has been installed.  And it certainly does not have to be the way we want the attacker to behave.</p><h2 id="3-Secure-and-What-to-secure"><a href="#3-Secure-and-What-to-secure" class="headerlink" title="3. Secure and What to secure"></a>3. Secure and What to secure</h2><p>Some Popular <strong>Security Models</strong>:   </p><ol><li>CIA model: Confidentiality, Integrity, Availability.</li><li>Parkerian Hexad: Confidentiality, Integrity, Availability, Utility, Possessing, Authenticity.</li><li>McCumb Cube: Security Goals(CIA), Information state(transmission, storage, processing), countermessure(Technologies, Policies&amp;Practices, People)</li></ol><p>&nbsp;<br><img src="/images/risk_management_Resource4CH1/Security%20Models.png" alt="Security Models"><br>&nbsp;</p>]]></content>
      
      
      
        <tags>
            
            <tag> risk management </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Forensic Chapter 7 - Cloud Forensic</title>
      <link href="/2024/02/12/forensic/forensic_CH7_Cloud%20Forensic/"/>
      <url>/2024/02/12/forensic/forensic_CH7_Cloud%20Forensic/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Two-Cloud-Forensic-Ways"><a href="#1-Two-Cloud-Forensic-Ways" class="headerlink" title="1. Two Cloud Forensic Ways"></a>1. Two Cloud Forensic Ways</h2><ol><li><p>Computer forensic in the cloud    </p><ul><li>Take a snapshot from VMs</li><li>Prepare a VM as forensics workstation</li><li>Attach your VM snapshot as read-only</li><li>Do computer forensic</li></ul></li><li><p>Forensic in cloud environment    </p><ol><li>Establish assets inventory</li><li>Deploy and integrate SIEM (Security information and Event Management)</li><li>Keep logging and send logs to SIEM</li><li>Define and apply secure environment for logging and SIEM infrastructure</li><li>Setup preset credentials to access your VMs in the cloud</li><li>Build-up skills and capabilities</li><li>Continuous improvement</li></ol></li></ol><h2 id="2-SIEM-Stack"><a href="#2-SIEM-Stack" class="headerlink" title="2. SIEM Stack"></a>2. SIEM Stack</h2><ol><li><p>Paid Version<br><code>Splunk</code> expensive cloud forensic platform</p></li><li><p>Free Version<br><code>Elastic</code> free colud forensic platform    </p><ol><li>Diagram</li></ol><p> <img src="/images/forensic_Resource4CH7/structure.png" alt="img"></p><ol start="2"><li>Architecture</li></ol><p> <img src="/images/forensic_Resource4CH7/architecture.png" alt="img"></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Forensic Chapter 6 - Smartphone Forensic</title>
      <link href="/2024/02/05/forensic/forensic_CH6_Smartphone%20Forensic/"/>
      <url>/2024/02/05/forensic/forensic_CH6_Smartphone%20Forensic/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Comparation-Between-Mobile-Device-and-PC"><a href="#1-Comparation-Between-Mobile-Device-and-PC" class="headerlink" title="1. Comparation Between Mobile Device and PC"></a>1. Comparation Between Mobile Device and PC</h2><table><thead><tr><th></th><th>iphone</th><th>Mac</th></tr></thead><tbody><tr><td>Computing power</td><td>&#x3D;</td><td>&#x3D;</td></tr><tr><td>Storage</td><td>&lt;</td><td>a bit larger</td></tr><tr><td>Ram</td><td>&#x3D;</td><td>&#x3D;</td></tr><tr><td>Connectivity</td><td>&gt;</td><td>Need a WIFI or Ethernet</td></tr><tr><td>Power consumption</td><td>&lt;</td><td></td></tr><tr><td>System</td><td>Advanced</td><td></td></tr><tr><td>Security</td><td>Encrypted storage</td><td></td></tr></tbody></table><h2 id="2-Acquisition-Types"><a href="#2-Acquisition-Types" class="headerlink" title="2. Acquisition Types"></a>2. Acquisition Types</h2><ol><li><p>Logical Acquisition<br>A high-leve acquisition, normally describe the action of copying that allowed by the system.    </p><ul><li>Pros: easy and time friendly and no need to wipe the trace of this kind of actions.    </li><li>Cons: limited capabilities.</li></ul></li><li><p>File System Acquisition<br>A middle-level acquisition copys the file system’s structure, including the existing logical objects lying on top of it.    </p><ul><li>Pros: Can recover deleted objects.    </li><li>Cons: long time needed, harder than logical acquisition.</li></ul></li><li><p>Physical Acquisition<br>a bit-by-bit copy of the storage media.    </p><ul><li>Pros: very powerful.    </li><li>Cons: Hard, long time needed.</li></ul></li></ol><h2 id="3-Data-Extraction-Types"><a href="#3-Data-Extraction-Types" class="headerlink" title="3. Data Extraction Types"></a>3. Data Extraction Types</h2><ol><li>Manual Extraction   </li><li>Logical Extraction   </li><li>Physical Extraction   </li><li>JTAG &amp; Chip-Off</li></ol><h2 id="4-Privilege-Gaining-Techniques"><a href="#4-Privilege-Gaining-Techniques" class="headerlink" title="4. Privilege Gaining Techniques"></a>4. Privilege Gaining Techniques</h2><ol><li><p>Android -&gt; Rooting    </p><ul><li>Permanent: replace kernel   </li><li>Temporary: forensic software, a usual restart can cause it reversing to un-rooted state</li></ul></li><li><p>IOS -&gt; Jailbreaking    </p><ul><li>Tethered Jailbreaking: reset after restarting, device won’t function fully until jailbreaking again.   </li><li>Semi-tethered Jailbreaking: reset after restarting, device retains most of its function except those requires elevation or outside of normal operating parameters.   </li><li>Untethered Jailbreaking: permanent until system upgrade.</li></ul></li><li><p>Restrictions    </p><ul><li>secure applications like banking or finance-related use sand-box.</li><li>device will be untrusted</li></ul></li></ol><h2 id="5-Forensic-Part"><a href="#5-Forensic-Part" class="headerlink" title="5. Forensic Part"></a>5. Forensic Part</h2><ol><li><p>Remember    </p><ul><li>Don’t turn off mobile device</li><li>Isolate the device from network connection</li></ul></li><li><p>Things to collect   </p><ol><li>SIM-Card<ul><li>International Mobile Equipment Identity -&gt; IMEI, the name of your mobile devices.</li><li>Integrated Circuit Card ID -&gt; ICCID, link to the owner</li><li>International Mobile Subscriber Identity -&gt; IMSI, find the background information about this sim card, like country, mobile network and subscriber number.</li><li>PIN, PUK number, SIM applications</li></ul></li><li>Phone memory   <ul><li>Contacts</li><li>SMS, MMS</li><li>Email</li><li>Call list</li><li>Multimedia stuff</li><li>Calendar</li><li>Geo-location</li></ul></li><li>Online accounts<ul><li>Browser’s history</li><li>Password storage</li></ul></li></ol></li><li><p>Choosing the right extraction strategy</p></li></ol><p><img src="/images/forensic_Resource4CH6/Extraction%20Strategy.png" alt="img"></p><ol start="4"><li><p>Misc </p><ul><li><p>Android    </p><p>  <img src="/images/forensic_Resource4CH6/FSofAndroid.png" alt="img"></p></li><li><p>IOS    </p><p>  <img src="/images/forensic_Resource4CH6/IOS.png" alt="img"></p></li><li><p>.APK   </p><p>  <img src="/images/forensic_Resource4CH6/apk.png" alt="img"></p></li><li><p>Mobile forensic tools   </p><p>  <img src="/images/forensic_Resource4CH6/tools.png" alt="img"></p></li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Forensic Chapter 5 - Network Forensic</title>
      <link href="/2024/01/29/forensic/forensic_CH5_Network%20Forensic/"/>
      <url>/2024/01/29/forensic/forensic_CH5_Network%20Forensic/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Network-Layers"><a href="#1-Network-Layers" class="headerlink" title="1. Network Layers"></a>1. Network Layers</h2><ol><li><strong>OSI 7 layers</strong></li></ol><p><img src="/images/forensic_Resource4CH5/OSI%207%20layers.png" alt="OSI"></p><ol start="2"><li><strong>TCP&#x2F;IP 4 layers</strong></li></ol><p><img src="/images/forensic_Resource4CH5/TCPIP%20layers.png" alt="TCP/IP layers"></p><ol start="3"><li><strong>Usually used protocols in each layer</strong></li></ol><table><thead><tr><th>Application Layer</th><th>FTP, SMTP, HTTP, HTTPS, DNS, DHCP</th></tr></thead><tbody><tr><td>Presentation Layer</td><td>N&#x2F;A</td></tr><tr><td>Session Layer</td><td>N&#x2F;A</td></tr><tr><td>Transport Layer</td><td>TCP, UDP</td></tr><tr><td>Network Layer</td><td>IP, IPSec, ICMP, IGMP, ARP</td></tr><tr><td>Data Link Layer</td><td>802.11, MAC</td></tr><tr><td>Physical Layer</td><td>N&#x2F;A</td></tr></tbody></table><ol start="4"><li><strong>Differences between TCP and UDP</strong>   <ol><li>TCP is a connection based protocol which means we can only communicate with one endpoint at one time (unicast).</li><li>UDP could be used in multicast and broadcast scenaries.</li><li>TCP is more secure than UDP because it makes sure all the messages are transmitted to the other side already.</li></ol></li></ol><h2 id="2-Tools"><a href="#2-Tools" class="headerlink" title="2. Tools"></a>2. Tools</h2><ol><li>tcpdump -&gt; a command line command used to check the stream of protocols.</li><li>snort -&gt; rule based network stream IDS (Intrusion detection system)</li><li>wireshark -&gt; GUI + tcpdump</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Forensic Chapter 4 - Memory Forensic</title>
      <link href="/2024/01/22/forensic/forensic_CH4_Memory%20Forensic/"/>
      <url>/2024/01/22/forensic/forensic_CH4_Memory%20Forensic/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Memory-Forensic"><a href="#1-Memory-Forensic" class="headerlink" title="1. Memory Forensic"></a>1. Memory Forensic</h2><p>Unlike traditional forensic analysis that primarily deals with data stored on hard drives (persistent storage), memory forensics targets the information stored in a computer’s RAM, which is lost when the computer is powered off or rebooted. This includes, but is not limited to : </p><ol><li>Running processes</li><li>Open files</li><li>Network connections</li><li>System and user information</li></ol><p>at the time the memory was captured.</p><h2 id="2-Basic-Knowledge-about-Computer-Science"><a href="#2-Basic-Knowledge-about-Computer-Science" class="headerlink" title="2. Basic Knowledge about Computer Science"></a>2. Basic Knowledge about Computer Science</h2><ol><li>Chip architecture</li></ol><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>North Bridge</td><td>The Northbridge typically handles communications <em><strong><code>among</code></strong></em> the CPU, in some cases RAM, and PCI Express video cards, and the southbridge. Some northbridges also contain integrated video controllers, also known as a Graphics and Memory Controller Hub (GMCH) in Intel systems.</td></tr><tr><td>South Bridge</td><td>The Southbridge can usually be distinguished from the northbridge by <em><strong><code>not being directly connected to the CPU</code></strong></em>.</td></tr></tbody></table><ol start="2"><li>Types of RAM</li></ol><ul><li>SRAM: Static RAM</li><li>DRAM: Dynamic RAM</li><li>VRAM: Vedio RAM</li><li>NVRAM: Non-volatile RAM</li><li>SDRAM: Synchronous DRAM</li></ul><h2 id="3-Why-Memory-Forensic"><a href="#3-Why-Memory-Forensic" class="headerlink" title="3. Why Memory Forensic?"></a>3. Why Memory Forensic?</h2><p>Traditional Forensic (Computer Forensic) focuses on:   </p><ol><li>Data Recovery</li><li>File Analysis</li><li>Timeline Analysis</li><li>Artifact Analysis</li></ol><p>Memory Forensic focuses on:    </p><ol><li>Process Analysis</li><li>Malware Detection</li><li>Rootkit Detection</li><li>System State Analysis</li></ol><h2 id="4-Memory-Image-Acquisition"><a href="#4-Memory-Image-Acquisition" class="headerlink" title="4. Memory Image Acquisition"></a>4. Memory Image Acquisition</h2><ol><li><p>Method :   </p><ul><li>Live : While targeted computer is turning on</li><li>Off : <ul><li>Hibernation</li><li>Swap Files</li><li>Dump Files</li></ul></li><li><em><strong>Local</strong></em> or <em><strong>Remote</strong></em></li></ul></li><li><p>Challenges with Memory Forensic</p><ol><li>Structure : Hard to tell the inside structure of a part of memory.</li><li>Volatility : No data will be stored after changing.</li></ol></li></ol><h2 id="5-Usefull-tools-for-Memory-Forensic"><a href="#5-Usefull-tools-for-Memory-Forensic" class="headerlink" title="5. Usefull tools for Memory Forensic"></a>5. Usefull tools for Memory Forensic</h2><ol><li><p>Free: Belkasoft RAM Capturer, WinPMEM, DumpIT, <code>Volatility</code></p></li><li><p>Commercial: FTK Imager, F-Response</p></li></ol><h2 id="6-Practical-Case-Using-Volatility"><a href="#6-Practical-Case-Using-Volatility" class="headerlink" title="6. Practical Case - Using Volatility"></a>6. Practical Case - Using Volatility</h2><p>STEPS:  </p><ol><li>Find image info (OS version)</li><li>Find suspecious network connections</li><li>Use Malware detection option to check related process</li></ol><h2 id="7-Useful-Link"><a href="#7-Useful-Link" class="headerlink" title="7. Useful Link"></a>7. Useful Link</h2><p><a href="https://dfirmadness.com/case-001-memory-analysis/">case-001-memory-analysis</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Forensic Chapter 3 - Computer forensic</title>
      <link href="/2024/01/15/forensic/forensic_CH3_Computer%20Forensic/"/>
      <url>/2024/01/15/forensic/forensic_CH3_Computer%20Forensic/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Essential-Basics"><a href="#1-Essential-Basics" class="headerlink" title="1. Essential Basics"></a>1. Essential Basics</h2><ol><li><p>Computer Forensic<br>Not focus on the term itself, but how to conduct it.    </p><ol><li><p>Acuisition</p></li><li><p>Analysis </p></li><li><p>Report </p><p> <img src="/images/forensic_Resource4CH3/Computer%20Forensic.png" alt="Computer Forensic"></p></li></ol></li><li><p>Digital Evidence<br>Any data that is preserved in a computer system that can be read or understand by a person or computer system&#x2F;applications.    </p><p> <img src="/images/forensic_Resource4CH3/Digital%20Evidence.png" alt="Digital Evidence"></p></li><li><p>Metadata vs Data</p></li><li><p>Data Volatility</p></li><li><p>File System</p><table><thead><tr><th>File System</th><th>Construction</th></tr></thead><tbody><tr><td>FAT</td><td><img src="/images/forensic_Resource4CH3/FAT.png" alt="FAT"></td></tr><tr><td>FAT32</td><td><img src="/images/forensic_Resource4CH3/FAT32.png" alt="FAT32"></td></tr><tr><td>exFAT</td><td><img src="/images/forensic_Resource4CH3/exFAT.png" alt="exFAT"></td></tr><tr><td>APFS</td><td><img src="/images/forensic_Resource4CH3/APFS.png" alt="APFS"></td></tr><tr><td>EXT</td><td><img src="/images/forensic_Resource4CH3/EXT.png" alt="EXT"></td></tr><tr><td>NTFS</td><td><img src="/images/forensic_Resource4CH3/NTFS.png" alt="NTFS"></td></tr></tbody></table></li><li><p>Disk Drive Anatomy</p><ol><li><p>Hard Disk Drive </p><p> <img src="/images/forensic_Resource4CH3/Disk%20Drive%20Anatomy.png" alt="Disk Drive Anatomy"></p></li><li><p>HDD vs Solid State Disk</p><p> <img src="/images/forensic_Resource4CH3/HDD%20vs%20SSD.png" alt="HDD vs SSD"></p></li><li><p>SSD is tougher to restore because these is a protocol called TRIM which will force the invalid zone clear first.</p></li></ol></li></ol><h2 id="2-Windows-Forensic"><a href="#2-Windows-Forensic" class="headerlink" title="2. Windows Forensic"></a>2. Windows Forensic</h2><ol><li><p>Need to know</p><ol><li><p>Important files location<br> Normally the important files are stored at <code>C:\Windows\System32</code>, files include <code>wininit.exe</code>, <code>svchost.exe</code> and so on.</p></li><li><p>Auto starts registries </p><p> <img src="/images/forensic_Resource4CH3/Autostarts%20registries.png" alt="Auto starts registries"></p></li><li><p>Hidden files   </p><ul><li><p>Impersonate names of legitimated files   </p><ul><li>A:1sass.exe B:lsass.exe   </li><li>A: dllhost.exe B: dIIhost.exe   </li><li>A: EXPLORER.EXE B: EXPL0RER.EXE</li></ul></li><li><p>Hidden by malicious users<br>  Can use<br>  <img src="/images/forensic_Resource4CH3/Hidden%20files.png" alt="Hidden files"></p></li></ul></li><li><p>Alternate Data Streams</p></li><li><p>Prefetch   </p><ul><li>Maintains a list of used programs.</li><li>Used to decrease the amount of time to open a program.   </li><li><strong>Location:</strong> <code>C:\Windows\Prefetch</code></li><li><strong>File Format:</strong> <code>filename.pf</code> -&gt; proprietary format</li><li>Tool to read pf file: <code>pecmd.exe</code></li></ul></li><li><p>Signed or Not<br> Use <code>Sigcheck</code></p></li></ol></li><li><p>Timeline Analysis   </p><ol><li><p>Corresponded Actions</p><p> <img src="/images/forensic_Resource4CH3/Time%20analysis.png" alt="Timeline Analysis"></p></li><li><p>Letter Connotation</p><table><thead><tr><th>M</th><th>Last Modified</th></tr></thead><tbody><tr><td>A</td><td>Last Accessed</td></tr><tr><td>C</td><td>Meta data changes</td></tr><tr><td>B</td><td>When the file was created</td></tr></tbody></table></li></ol></li><li><p>Windows Registry Analysis</p><ol><li><p>NTUSER.DAT<br> Settings specific to individual users. Tracks users activity and preferences.</p><ol><li>MUICache: Show software which has been executed on a system.</li><li>MRU: Show software which is most recently used.</li></ol></li><li><p>SAM<br> Only applicable to local or domain administrators. Contains user name, SID and encrypted password hash for all users in a domain.</p></li><li><p>Security<br> Contains the security permissions for administrators. Used by the system to enforce security policy. Limited usefulness for forensics.</p></li><li><p>Software<br> Contains programs and Windows settings for all software on the system.</p></li><li><p>System<br> Contains Windows OS setup, mounted devices, hardware settings and services.</p></li></ol></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Forensic Chapter 2 - Post-Incident Activities</title>
      <link href="/2024/01/08/forensic/forensic_CH2_Post-Incident%20Activities/"/>
      <url>/2024/01/08/forensic/forensic_CH2_Post-Incident%20Activities/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Terminology"><a href="#1-Terminology" class="headerlink" title="1. Terminology"></a>1. Terminology</h2><table><thead><tr><th>Containment</th><th>Limiting the extent of the incident and preventing it from spreading or causing further damage to the organization. It’s about isolating affected systems to ensure the incident doesn’t escalate.</th></tr></thead><tbody><tr><td>Eradication</td><td>The process of removing the threat from the organization’s environment. This includes identifying and eliminating the root cause of the incident.</td></tr><tr><td>Recovery</td><td>The process of restoring and returning affected systems and devices back to their fully operational states. It includes ensuring that no threats remain and verifying the integrity of the systems.</td></tr></tbody></table><h2 id="2-Containment-Strategy"><a href="#2-Containment-Strategy" class="headerlink" title="2. Containment Strategy"></a>2. Containment Strategy</h2><ol><li>Potential damage</li><li>Need for evidence preservation</li><li>Service availability</li><li>Time and resource</li><li>Effectiveness of the strategy</li><li>Duration of the solution</li></ol><p>Sample: Honey Pot</p><h2 id="3-Evidence-Gathering"><a href="#3-Evidence-Gathering" class="headerlink" title="3. Evidence Gathering"></a>3. Evidence Gathering</h2><ol><li>Use Pre-defined templates</li><li>Keep incident response system isolated form affected network and system.</li><li>Reconcile the evidences</li><li>Identify missteps</li><li>Idnetify attacking hosts</li></ol><h2 id="4-Eradication"><a href="#4-Eradication" class="headerlink" title="4. Eradication"></a>4. Eradication</h2><ol><li>Undoing Threat actors’ actions</li><li>Restoring to known good state</li><li>Removing Threat actors’prsence &amp; backdoors</li><li>Performing security testing</li><li>Dealing with unauthorised transactions</li><li>Revoking and renewing access credentials</li></ol><h2 id="5-Post-Incident-Activity"><a href="#5-Post-Incident-Activity" class="headerlink" title="5. Post-Incident Activity"></a>5. Post-Incident Activity</h2><p>Often most under-rated activity in the lifecycle   </p><ol><li>Identify lesson learnt</li><li>Data collection during incidents</li><li>Evidence retention</li><li>Incident handling checklist</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Forensic Chapter 1 - Preparing for Incidents</title>
      <link href="/2024/01/01/forensic/forensic_CH1_Preparing%20for%20Incidents/"/>
      <url>/2024/01/01/forensic/forensic_CH1_Preparing%20for%20Incidents/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Difference-between-Event-and-Incident"><a href="#1-Difference-between-Event-and-Incident" class="headerlink" title="1. Difference between Event and Incident"></a>1. Difference between Event and Incident</h2><table><thead><tr><th>Event</th><th>A cybersecurity event is any observable occurrence in a network or system.</th></tr></thead><tbody><tr><td>Incident</td><td>A specific type of event that actually harms or represents a real threat to the integrity, confidentiality, or availability of data or systems.</td></tr></tbody></table><p>For an event, we need to:    </p><ol><li>Obeservation: To see if the event is a potential incident or not.</li><li>Take actions: Monitor the situation, review logs and so on.</li><li>Get outcome: Give a conclusion based on the actions.</li></ol><h2 id="2-Cyber-Incidents-Response"><a href="#2-Cyber-Incidents-Response" class="headerlink" title="2. Cyber Incidents Response"></a>2. Cyber Incidents Response</h2><ol><li><p>Terms </p><table><thead><tr><th>Policy</th><th>Why we need to do it?</th></tr></thead><tbody><tr><td>Standard</td><td>What is required?</td></tr><tr><td>Procedure</td><td>How to do it?</td></tr><tr><td>Guideline</td><td>Customized procedure</td></tr></tbody></table></li><li><p>A sample procedure of CIR    </p><ol><li>Rapid Containment</li><li>Reduce Damage and Cost</li><li>Legal and Regulatory Compliance</li><li>Maintain Trust and Reputation</li><li>Learning and Improvement</li><li>Ensuring Business Continuity</li></ol></li><li><p>Information Sharing<br>We need to inform some entities when incidents happenning.   </p><ol><li><p>Idnerify Key Stakeholders</p><ol><li>Internal: within the company, group-level</li><li>supply chain</li><li>regulators</li><li>law enforcements</li><li>within an dcross-sectors</li></ol></li><li><p>Manage Media Interaction</p><ol><li>designated spokesperson</li><li>timely updates</li><li>flow of updates</li></ol></li></ol></li><li><p>Types of Cyber Security Incidents Response Team (CSIRT)</p><ol><li><p>Security Team</p></li><li><p>Centralized CSIRT</p></li><li><p>Distributed CSIRT</p></li><li><p>Extemalized CSIRT</p></li><li><p>Coordinating CSIRT</p></li><li><p>Hybrid CSIRT</p><p> <img src="/images/forensic_Resource4CH1/Team%20Types.png" alt="Team Types"></p></li></ol></li><li><p>Incident Responders in different periods</p><p> <img src="/images/forensic_Resource4CH1/Incident%20Responders%20in%20different%20periods.png" alt="Incident Responders in different periods"></p></li><li><p>A Recommendation Guideline</p><p> <img src="/images/forensic_Resource4CH1/A%20Recommendation%20Guideline.png" alt="A Recommendation Guideline"></p></li></ol><h2 id="3-Incident-Response-Lifecycle"><a href="#3-Incident-Response-Lifecycle" class="headerlink" title="3. Incident Response Lifecycle"></a>3. Incident Response Lifecycle</h2><ol><li><p>Overall Lifecycle   </p><ol><li><p>Preparation</p></li><li><p>Detection &amp; Analysis</p></li><li><p>Containment, Eradication and Recovery</p></li><li><p>Post-incident Activity</p><p> <img src="/images/forensic_Resource4CH1/Lifecycle%20.png" alt="Lifecycle"></p></li></ol></li><li><p>Preparation (Documentation)   </p><ol><li>Asset lists   <ol><li>Cloud Assets</li><li>Business and System owners</li></ol></li><li>Others   <ol><li>Network diagram</li><li>Baselines</li></ol></li><li>Facility   <ol><li>Secure storage facility</li><li>Designated War room</li></ol></li><li>Communication   <ol><li>Up-to-date contact information</li><li>Mobile phones</li></ol></li><li>Information sharing platform<ol><li>MISP -&gt; Malware information sharing platform</li><li>TheHive</li></ol></li><li>Computers</li><li>Softwares</li></ol></li><li><p>Detction &amp; Analysis   </p><ol><li>Know the attack vectors</li><li>Analysis</li><li>Documentation</li><li>Prioritization</li><li>Notification</li></ol></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> forensic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Introduction of SQL injection</title>
      <link href="/2023/09/03/SQL/SQLi/"/>
      <url>/2023/09/03/SQL/SQLi/</url>
      
        <content type="html"><![CDATA[<h1 id="SQLi-Steps"><a href="#SQLi-Steps" class="headerlink" title="SQLi Steps"></a>SQLi Steps</h1><ol><li>Find out which DBMS the application uses<blockquote><ul><li>Oracle</li></ul></blockquote> SELECT * FROM all_tables<br> SELECT * FROM all_tab_columns  WHERE table_name &#x3D; ‘TABLE-NAME-HERE’</li></ol><blockquote><ul><li>Microsoft</li></ul><p>  </p></blockquote><pre><code>SELECT * FROM information_schema.tables  SELECT * FROM information_schema.columns WHERE table_name = &#39;TABLE-NAME-HERE&#39;  </code></pre><blockquote><ul><li>PostgreSQL</li></ul><p></p></blockquote><pre><code>SELECT * FROM information_schema.tables  SELECT * FROM information_schema.columns WHERE table_name = &#39;TABLE-NAME-HERE&#39;</code></pre><blockquote><ul><li>MySQL</li></ul><p></p></blockquote><pre><code>SELECT * FROM information_schema.tables  SELECT * FROM information_schema.columns WHERE table_name = &#39;TABLE-NAME-HERE&#39;   </code></pre><ol start="2"><li>Find out the number of columns you can select by SQLi</li></ol><p>Select c1,c2 from table1 where cx&#x3D;<em><strong>‘entrypoint’</strong></em>   </p><blockquote><ul><li>Way 1 -&gt; by replace the entrypoint to ‘+order+by+testing_number–</li></ul></blockquote><blockquote><ul><li>Way 2 -&gt; replace entrypoint to ‘+union+select+null,null…+from+table_name–</li></ul></blockquote><ol start="3"><li>Using infromation_schema.tables &amp; information_schema.columns to find the table you want and the columns you want:<br><em><strong>cheetsheet weblink&#x3D;&gt;<a href="https://portswigger.net/web-security/sql-injection/cheat-sheet">https://portswigger.net/web-security/sql-injection/cheat-sheet</a></strong></em></li></ol><h2 id="In-Conclusion"><a href="#In-Conclusion" class="headerlink" title="In Conclusion"></a>In Conclusion</h2><p>First -&gt; Find the version of SQL using   </p><p>Second -&gt;  Find out the number of columns you can select by SQLi   </p><p>Third -&gt; Using infromation_schema.tables &amp; information_schema.columns to find the table you want and the columns you want   </p><p>Additionally, a cheatsheet usefull &#x3D;&gt; <a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/MySQL%20Injection.md">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/MySQL%20Injection.md</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Access Control Basic</title>
      <link href="/2022/01/02/security%20basic/Access%20Control%20Basics/"/>
      <url>/2022/01/02/security%20basic/Access%20Control%20Basics/</url>
      
        <content type="html"><![CDATA[<h2 id="Access-Control"><a href="#Access-Control" class="headerlink" title="Access Control"></a>Access Control</h2><h3 id="1-Definition-of-Access-Control"><a href="#1-Definition-of-Access-Control" class="headerlink" title="1. Definition of Access Control"></a>1. Definition of Access Control</h3><p><em><strong>Access control is a selective restriction of access to a place of resource.</strong></em><br>Authentication is typically the first step for access control, after successful authentication, the system decides whether the request for accessing a place&#x2F;resource is granted or not based on the predefined rules&#x2F;policies.</p><h3 id="2-Access-Control-Model"><a href="#2-Access-Control-Model" class="headerlink" title="2. Access Control Model"></a>2. Access Control Model</h3><p><em><strong>Access control model is a scheme for specifying and<br>enforcing security policies. There are different classifications of access control models</strong></em>  </p><ol><li><p>According to who decides the access rights to an object:</p><ul><li>Discretionary Access Control -&gt; DAC<br> -&gt;<em>The owner of the object decides the rights. Example: the owner of a file decides who can read or<br>write the file</em></li><li>Mandatory Access Control -&gt; MAC<br> -&gt;<em>A policy administrator decides the policies, which must<br>be followed by everyone in the system. Example: NTU does not allow the students to access<br>the exam marks entry system</em></li></ul></li><li><p>According to how to store the security policies: </p><ul><li>Access Control Matrix   <div style="display: flex;"> <img src="/images/access_control/AccessControlMatrix.png" style="height: 120px;"></div></li><li>Capability-based Model   <div style="display: flex;"> <img src="/images/access_control/Capabilities.png" style="height: 120px;"></div></li><li>ACL-based Model   <div style="display: flex;"> <img src="/images/access_control/ACL.png" style="height: 120px;"></div></li></ul></li><li><p>According to how to simplify the security policies: </p><ul><li>Role-based Access Control (RBAC)   <div style="display: flex; justify-content: center;"> <img src="/images/access_control/Role-based%20Model.png" style="height: 360px; margin-top: 20px; margin-bottom:20px; "></div></li><li>Rule-based Access Control (RUBAC)</li><li>Multi-Level Security (MLS), such as BLP model and Biba model. Multi-level security (MLS) has been traditionally used in military organizations for document classification and personnel clearance.<br> MLS is type of mandatory access control model. Objects are classified into different security levels. Each user is assigned a security level.<br> There are two main MLS models:   <ul><li>Bell-Lapadula model, for confidentiality.</li></ul></li></ul></li></ol><div style="display: flex; justify-content: center;">    <img src="/images/access_control/Bell-Lapadula%20model.png" style="height: 360px; margin-bottom:20px; "></div>        * Biba model, for integrity. <div style="display: flex; justify-content: center;">    <img src="/images/access_control/Biba%20model.png" style="height: 360px; margin-top: 20px; margin-bottom:20px; "></div>    ]]></content>
      
      
      
        <tags>
            
            <tag> security basic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++ program layout in virtual memory</title>
      <link href="/2021/01/13/cncpp/C++%20in%20memory%20space/"/>
      <url>/2021/01/13/cncpp/C++%20in%20memory%20space/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Generic-layout"><a href="#1-Generic-layout" class="headerlink" title="1. Generic layout"></a>1. Generic layout</h2><p>For a program, it can only manipulate the virtual memory space then OS help map the virtual memory address of a program to the corresponding physical memory address. The diagram below shows the generic virtual memory layout of a C&#x2F;C++ program.<br><em>And need to notice that the two sample diagrams are based on the virtual memory space layout of the Linux 32-bit system</em>.</p><div style="display: flex; justify-content: center;">    <img src="/images/mem_layout_of_cpp/memory-layout-in-c.png"></div><p>Components:    </p><ol><li>Code segement</li><li>Initialized data segment (aka: data segment)</li><li>Uninitialized data segment (aka: BSS -&gt; block started by symbol)</li><li>Heap</li><li>shared space between stack and heap</li><li>Stack</li><li>Cmd arguments</li></ol><p>In practical, there is a small entry point program under code segment which is used to activate the program. And there’s a block of environment variables above cmd arguments block. As shown below:   </p><div style="display: flex; justify-content: center;">    <img src="/images/mem_layout_of_cpp/linux32bit.png" style="height: 460px;"></div><h2 id="2-Abstract-layout"><a href="#2-Abstract-layout" class="headerlink" title="2. Abstract layout"></a>2. Abstract layout</h2><p>As saying as an abstract layout, there are five blocks:<br>stack, heap, static, const, free store.    </p><p>Attention!</p><ul><li><p>Free Store<br>The free store is one of the two dynamic memory areas, allocated&#x2F;freed by new&#x2F;delete. Object lifetime can be less than the time the storage is allocated; that is, free store objects can have memory allocated without being immediately initialized, and can be destroyed without the memory being immediately deallocated. During the period when the storage is allocated but outside the object’s lifetime, the storage may be accessed and manipulated through a void* but none of the proto-object’s nonstatic members or member functions may be accessed, have their addresses taken, or be otherwise manipulated.    </p></li><li><p>Heap<br>The heap is the other dynamic memory area, allocated&#x2F;freed by malloc&#x2F;free and their variants. Note that while the default global new and delete might be implemented in terms of malloc and free by a particular compiler, the heap is not the same as free store and memory allocated in one area cannot be safely deallocated in the other. Memory allocated from the heap can be used for objects of class type by placement-new construction and explicit destruction. If so used, the notes about free store object lifetime apply similarly here.</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> c&amp;cpp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
